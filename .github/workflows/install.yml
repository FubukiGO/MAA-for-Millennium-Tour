name: install

on:
  push:
    tags:
      - "v*"
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $($is_release) ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi

          echo tag=$tag | tee -a $GITHUB_OUTPUT
          echo is_release=$is_release | tee -a $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}
  gui:
    needs: meta
    runs-on: windows-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Download Latest MFAWPF
        uses: robinraju/release-downloader@v1.8
        with:
          repository: SweetSmellFox/MFAWPF
          latest: true
          out-file-path: gui
          extract: true

      - name: Install Microsoft Visual C++ Redistributable
        run: |
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
          Start-Process -FilePath vc_redist.x64.exe -ArgumentList '/install', '/quiet', '/norestart' -Wait

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pipreqs
          pip install MaaAgentBinary
          pip install maafw
          pipreqs assets/python --encoding=utf8 --savepath requirementstemp.txt
          pip install -r requirementstemp.txt

      - name: gui resources
        shell: pwsh
        run: |
          Write-Output "current dir:"
          Get-ChildItem
          Write-Output "---------------"
          Remove-Item -Force ./gui/*.zip
          Copy-Item -Recurse -Force ./assets/resource/* ./gui/Resource/
          Copy-Item -Recurse -Force ./assets/python ./gui/python/
          Write-Output "gui:"
          Get-ChildItem ./gui/
          Write-Output "---------------"
          Write-Output "gui/python:"
          Get-ChildItem ./gui/python/
          Write-Output "---------------"
          python ./gui/python/build.py
          $interfaceJson = Get-Content ./assets/interface.json | ConvertFrom-Json
          $interfaceJson.version = @{name = "千年之旅 律律子小助手"; version = "${{ needs.meta.outputs.tag }}"}
          $interfaceJson | ConvertTo-Json | Set-Content ./gui/interface.json
          

      - uses: actions/upload-artifact@v3
        with:
          name: MillenniumTour-Assistant-win-x86_64-with-gui
          path: "gui"     

  windows:
    needs: meta
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
    
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install pipreqs
          pip install MaaAgentBinary
          pip install maafw
          pipreqs assets/python --encoding=utf8 --savepath requirementstemp.txt
          pip install -r requirementstemp.txt
    
      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.8
        with:
          repository: MaaXYZ/MaaFramework
          fileName: "MAA-win-${{ matrix.arch }}*"
          latest: true
          out-file-path: "deps"
          extract: true

      - name: Install
        shell: bash
        run: |
          python ./install.py ${{ needs.meta.outputs.tag }}
          python ./install/python/build.py

      - uses: actions/upload-artifact@v3
        with:
          name: MillenniumTour-Assistant-win-${{ matrix.arch }}
          path: "install"

  # ubuntu:
  #   needs: meta
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       arch: [aarch64, x86_64]
  #     fail-fast: false

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pyinstaller
  #         pip install pywin32
  #         pip install winshell

  #     - name: Download MaaFramework
  #       uses: robinraju/release-downloader@v1.8
  #       with:
  #         repository: MaaXYZ/MaaFramework
  #         fileName: "MAA-linux-${{ matrix.arch }}*"
  #         latest: true
  #         out-file-path: "deps"
  #         extract: true

  #     - name: Install
  #       shell: bash
  #       run: |
  #         python ./install.py ${{ needs.meta.outputs.tag }}

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: MaaXXX-linux-${{ matrix.arch }}
  #         path: "install"

  # macos:
  #   needs: meta
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       arch: [aarch64, x86_64]
  #     fail-fast: false

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pyinstaller
  #         pip install pywin32
  #         pip install winshell

  #     - name: Download MaaFramework
  #       uses: robinraju/release-downloader@v1.8
  #       with:
  #         repository: MaaXYZ/MaaFramework
  #         fileName: "MAA-macos-${{ matrix.arch }}*"
  #         latest: true
  #         out-file-path: "deps"
  #         extract: true

  #     - name: Install
  #       shell: bash
  #       run: |
  #         python ./install.py ${{ needs.meta.outputs.tag }}

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: MaaXXX-macos-${{ matrix.arch }}
  #         path: "install"

  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, windows, gui]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done
      - uses: softprops/action-gh-release@v1
        with:
          files: assets/*
          tag_name: ${{ needs.meta.outputs.tag }}
